<?xml version="1.0"?>
<doc>
<assembly>
<name>
pitter
</name>
</assembly>
<members>
<member name="P:Pitter.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Pitter.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:Pitter.My.Resources.Resources._256x256">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Pitter.My.Resources.Resources.bg_2">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:Pitter.My.Resources.Resources.complete">
	<summary>
  Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
</summary>
</member><member name="P:Pitter.My.Resources.Resources.norm">
	<summary>
  Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
</summary>
</member><member name="T:Pitter.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="F:Pitter.norvanco.http.MultipartForm.coFormFields">
	<summary>
 Holds any form fields and values that you
 wish to transfer with your data.
 </summary>
</member><member name="F:Pitter.norvanco.http.MultipartForm.coRequest">
	<summary>
 Used mainly to avoid passing parameters to other routines.
 Could have been local to sendFile().
 </summary>
</member><member name="F:Pitter.norvanco.http.MultipartForm.coFileStream">
	<summary>
 Used if we are testing and want to output the raw
 request, minus http headers, out to a file.
 </summary>
</member><member name="F:Pitter.norvanco.http.MultipartForm.CONTENT_DISP">
	<summary>
 Difined to build the form field data that is being
 passed along with the request.
 </summary>
</member><member name="P:Pitter.norvanco.http.MultipartForm.TransferHttpVersion">
	<summary>
 Allows you to specify the specific version of HTTP to use for uploads.
 The dot NET stuff currently does not allow you to remove the continue-100 header
 from 1.1 and 1.0 currently has a bug in it where it adds the continue-100.  MS
 has sent a patch to remove the continue-100 in HTTP 1.0.
 </summary>
</member><member name="P:Pitter.norvanco.http.MultipartForm.FileContentType">
	<summary>
 Used to change the content type of the file being sent.
 Currently defaults to: text/xml. Other options are
 text/plain or binary
 </summary>
</member><member name="P:Pitter.norvanco.http.MultipartForm.BeginBoundary">
	<summary>
 The string that defines the begining boundary of
 our multipart transfer as defined in the w3c specs.
 This method also sets the Content and Ending
 boundaries as defined by the w3c specs.
 </summary>
</member><member name="P:Pitter.norvanco.http.MultipartForm.ContentBoundary">
	<summary>
 The string that defines the content boundary of
 our multipart transfer as defined in the w3c specs.
 </summary>
</member><member name="P:Pitter.norvanco.http.MultipartForm.EndingBoundary">
	<summary>
 The string that defines the ending boundary of
 our multipart transfer as defined in the w3c specs.
 </summary>
</member><member name="P:Pitter.norvanco.http.MultipartForm.ResponseText">
	<summary>
 The data returned to us after the transfer is completed.
 </summary>
</member><member name="P:Pitter.norvanco.http.MultipartForm.URL">
	<summary>
 The web address of the recipient of the transfer.
 </summary>
</member><member name="P:Pitter.norvanco.http.MultipartForm.BufferSize">
	<summary>
 Allows us to determine the size of the buffer used
 to send a piece of the file at a time out the IO
 stream.  Defaults to 1024 * 10.
 </summary>
</member><member name="M:Pitter.norvanco.http.MultipartForm.setFilename(System.String)">
	<summary>
 Used to signal we want the output to go to a
 text file verses being transfered to a URL.
 </summary>
	<param name="path"></param>
</member><member name="M:Pitter.norvanco.http.MultipartForm.setField(System.String,System.String)">
	<summary>
 Allows you to add some additional field data to be
 sent along with the transfer.  This is usually used
 for things like userid and password to validate the
 transfer.
 </summary>
	<param name="key">The form field name</param>
	<param name="str">The form field value</param>
</member><member name="M:Pitter.norvanco.http.MultipartForm.getStream">
	<summary>
 Determines if we have a file stream set, and returns either
 the HttpWebRequest stream of the file.
 </summary>
	<returns></returns>
</member><member name="M:Pitter.norvanco.http.MultipartForm.getResponse">
	<summary>
 Here we actually make the request to the web server and
 retrieve it's response into a text buffer.
 </summary>
</member><member name="M:Pitter.norvanco.http.MultipartForm.sendFile(System.String)">
	<summary>
 Transmits a file to the web server stated in the
 URL property.  You may call this several times and it
 will use the values previously set for fields and URL.
 </summary>
	<param name="aFilename">The full path of file being transfered.</param>
</member><member name="M:Pitter.norvanco.http.MultipartForm.writeString(System.IO.Stream,System.String)">
	<summary>
 Mainly used to turn the string into a byte buffer and then
 write it to our IO stream.
 </summary>
	<param name="io">The io stream for output.</param>
	<param name="str">The data to write.</param>
</member><member name="M:Pitter.norvanco.http.MultipartForm.getFormfields">
	<summary>
 Builds the proper format of the multipart data that
 contains the form fields and their respective values.
 </summary>
	<returns>The data to send in the multipart upload.</returns>
</member><member name="M:Pitter.norvanco.http.MultipartForm.getFileheader(System.String)">
	<summary>
 Returns the proper content information for the
 file we are sending.
 </summary>
	<remarks>
 Hits Patel reported a bug when used with ActiveFile.
 Added semicolon after sendfile to resolve that issue.
 Tested for compatibility with IIS 5.0 and Java.
 </remarks>
	<param name="aFilename"></param>
	<returns></returns>
</member><member name="M:Pitter.norvanco.http.MultipartForm.getFiletrailer">
	<summary>
 Creates the proper ending boundary for the multipart upload.
 </summary>
	<returns>The ending boundary.</returns>
</member><member name="M:Pitter.norvanco.http.MultipartForm.writeFile(System.IO.Stream,System.String)">
	<summary>
 Reads in the file a chunck at a time then sends it to the
 output stream.
 </summary>
	<param name="io">The io stream to write the file to.</param>
	<param name="aFilename">The name of the file to transfer.</param>
</member><member name="T:Pitter.norvanco.http.MultipartForm">
	<summary>
 Allow the transfer of data files using the W3C's specification
 for HTTP multipart form data.  Microsoft's version has a bug
 where it does not format the ending boundary correctly.
 Written by: gregoryp@norvanco.com
 </summary>
</member>
</members>
</doc>